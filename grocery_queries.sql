-- Grocery Store Management SQL Queries
use grocery;

-- 1Ô∏è. Customer Insights
-- 1.1 How many unique customers have placed orders?
select * from orders;

select
      count(distinct (cust_id)) as unique_customers
from orders;


-- 1.2 Which customers have placed the highest number of orders?
select * from customers;
select * from orders;

select cust_id,cust_name,
       count(ord_id) as no_of_orders
from customers
inner join orders using(cust_id)
group by cust_id,cust_name
order by no_of_orders desc
limit 5;

-- 1.3 What is the total and average purchase value per customer?
select * from customers;
select * from orders;
select * from order_details;


SELECT cust_id,cust_name,                                   
	sum(order_total_for_one_order) as total_purchase_value_by_customer,
    round(avg(order_total_for_one_order), 2) as average_value_of_this_customers_orders 
from customers 
inner join orders using(cust_id)             
inner join( select ord_id,                        
            sum(total_price) as order_total_for_one_order 
            from order_details 
            group by ord_id                                  
           ) as order_level_totals using(ord_id) 
group by cust_id, cust_name                          
order by total_purchase_value_by_customer desc;        



-- 1.4 Who are the top 5 customers by total purchase amount?
select * from customers;
select * from orders;
select * from order_details;

select cust_id,cust_name,   
       sum(total_price) as Total_Purchase_Amount
from customers
inner join orders using(cust_id)
inner join order_details using(ord_id)
group by cust_id,cust_name
order by total_purchase_amount desc
limit 5;
        
           -- 2. Product Performance
           
--  2.1 How many products exist in each category?
select * from categories;
select * from products;

select cat_id,cat_name, 
       count(prod_id) as Total_Products  
from categories
left join products
using(cat_id)
group by cat_id,cat_name
order by total_products desc;
      
      

-- 2.2 What is the average price of products by category?

select * from categories;
select * from products;

select cat_id,cat_name, 
       round(avg(price), 2) as avg_price
from categories
inner join products
using(cat_id)
group by cat_id,cat_name
order by avg_price desc;
       
-- 2.3 Which products have the highest total sales volume (by quantity)?
select * from products;
select * from order_details;

select prod_id,prod_name, 
       sum(quantity) as total_quantity_sold
from products
inner join order_details using(prod_id)
group by prod_id,prod_name
order by total_quantity_sold desc
limit 10;
       
-- 2.4 What is the total revenue generated by each product?
select * from products;
select * from order_details;

select prod_id,prod_name, 
       sum(total_price) as Total_revenue
from products
inner join order_details using(prod_id)
group by prod_id,prod_name
order by Total_revenue desc;

       -- if we want category name join categories and add cat_name

-- 2.5 How do product sales vary by category and supplier?
select * from categories;
select * from products;
select * from supplier;
select * from order_details;

select cat_name,sup_name,   
       sum(quantity) as total_quantity_sold, 
	   sum(total_price) as total_revenue
from order_details
inner join products using(prod_id)
inner join categories using(cat_id)
inner join supplier using(sup_id)
group by cat_name,sup_name 
order by total_revenue desc;
         
         
  
  
  -- 3. Sales and Order Trends     
-- 3.1 How many orders have been placed in total?

select * from orders;

select count(ord_id) as Total_orders 
from orders;

-- 3.2 What is the average value per order?
-- What is the average amount of money spent in each order?

select * from order_details;

select round(avg(order_total),2) as average_order_value
from (
    select ord_id,
    sum(total_price) as order_total
    from order_details
    group by ord_id
) as order_details;


  

select ord_id, avg(total_price) as avg_item_price
from order_details
group by ord_id; 


-- 3.3 On which dates were the most orders placed?
select * from orders;
select * from order_details;

select  order_date,
        count(ord_id) as order_count
from orders
group by order_date
order by order_count desc
limit 10;
       
       
-- 3.4 What are the monthly trends in order volume and revenue?

select *  from orders;
select * from order_details;
    
 select * from orders;
 
select  substring_index(order_date, '/', -1) as `year`,
		month(str_to_date(order_date, '%m/%d/%Y')) as month_number,
		monthname(str_to_date(order_date, '%m/%d/%Y')) as month_name,
		count(ord_id) as monthly_order_count,
		sum(total_price) as monthly_revenue
from orders
inner join order_details using(ord_id)
group by `year`, month_number, month_name
order by cast(`year` as unsigned), month_number;

-- 3.5 How do order patterns vary across weekdays and weekends?

select 
       case
            when dayname(str_to_date(order_date,'%m/%d/%Y')) in ('saturday', 'sunday') then 'weekend'
            else 'weekday'
		end as day_type,
        count(ord_id) as order_count
from orders
group by day_type;
	

--  4 Supplier Contribution

-- 4.1 How many suppliers are there in the database?

select * from supplier;
select count(sup_id) as Total_Suppliers 
from supplier;


-- 4.2 Which supplier provides the most products?

select * from supplier;
select * from products;

select sup_id,sup_name, 
       count(prod_id) as product_count
from supplier
inner join products using(sup_id)
group by sup_id,sup_name
order by product_count desc
limit 5;
       
-- 4.3 What is the average price of products from each supplier?

select * from supplier;
select * from products;

select sup_id,sup_name,
       round(avg(price), 2)as avg_product_price
from supplier
inner join products using(sup_id)
group by sup_id,sup_name
order by avg_product_price desc;
	
-- 4.4 Which suppliers contribute the most to total product sales (by revenue)?

select * from supplier;
select * from products;
select * from order_details;

select sup_id,sup_name,
       sum(total_price) as total_revenue
from supplier 
inner join products using(sup_id)
inner join order_details using(prod_id)
group by sup_id,sup_name
order by total_revenue desc;


-- 5. Employee Performance

-- 5.1 How many employees have processed orders?

select * from employees;
select * from orders;

select count(distinct emp_id) as employees_processing_orders
from orders;



-- 5.2 Which employees have handled the most orders?

select * from employees;
select * from orders;

select emp_id,emp_name, 
	   count(ord_id) as orders_handled
from employees
inner join orders using(emp_id)
group by emp_id,emp_name
order by orders_handled desc
limit 5;


-- 5.3 What is the total sales value processed by each employee?

select * from employees;
select * from orders;
select * from order_details;

select emp_id,emp_name, 
       sum(total_price) as total_sales_processed
from employees
inner join orders using(emp_id)
inner join order_details using(ord_id)
group by emp_id,emp_name
order by total_sales_processed desc;
       

-- 5.4 What is the average order value handled per employee?
select * from employees;
select * from orders;
select * from order_details;


            
		
select emp_name, round(avg(order_total), 2) as average_order_value_handled
from (
    select emp_name, ord_id, sum(total_price) as order_total
    from employees 
    inner join orders using(emp_id)
    inner join order_details using(ord_id)
    group by emp_name,ord_id
) as employee_order_summary
group by emp_name
order by average_order_value_handled desc;

select emp_id,emp_name,
    count(distinct ord_id) as total_orders,
    round(sum(total_price), 2) as total_sales,
    round(sum(total_price) / count(distinct ord_id), 2) as avg_order_value
from employees 
inner join orders using(emp_id) 
inner join order_details using(ord_id)
group by emp_id,emp_name
order by avg_order_value desc;



-- 6 Order Details Deep Dive

-- 6.1 What is the relationship between quantity ordered and total price?

select * from order_details;

select quantity, 
	   avg(total_price) as avg_total_price_of_quantity,
       avg(each_price) as avg_unit_price_of_quantity
from order_details
group by quantity
order by quantity;

-- unit price decreases with higher quantity - possibly a bulk discount

-- 6.2 What is the average quantity ordered per product?
select * from products;
select * from order_details;

select prod_id,prod_name,  
       round(avg(quantity), 2) as avg_quantity_ordered_per_product
from products
inner join order_details using(prod_id)
group by prod_id,prod_name
order by avg_quantity_ordered_per_product desc;
       

-- 6.3 How does the unit price vary across products and orders?

select * from products;
select * from order_details;

select prod_id,prod_name,
       min(each_price) as min_unit_price,
       max(each_price) as max_unit_price,
       round(avg(each_price), 2) as avg_unit_price,
       count(ord_detid) as times_ordered
from products
inner join order_details using (prod_id)
group by prod_id,prod_name
order by times_ordered desc;
       
select prod_id,prod_name,
       count(distinct each_price) as number_of_distinct_prices,
       min(each_price) as min_unit_price,
       max(each_price) as min_unit_price,
       round(avg(each_price), 2) as avg_unit_price,
       count(ord_detID) as times_sold
from products
inner join order_details using(prod_id)
group by prod_id,prod_name
order by times_sold desc;	

-- which products are customers buying frequently 
select prod_name,cust_name, 
       count(prod_name) as no_of_times
from customers
inner join orders using(cust_id)
inner join order_details using(ord_id)
inner join products using(prod_id)
group by prod_name,cust_name
order by no_of_times desc;



SELECT 
    prod_id, 
    prod_name,
    ROUND(AVG(each_price), 2) AS avg_unit_price,
    MIN(each_price) AS min_price,
    MAX(each_price) AS max_price,
    COUNT(DISTINCT ord_id) AS orders_count
FROM 
    products
JOIN 
    order_details USING(prod_id)
GROUP BY 
    prod_id, prod_name
ORDER BY 
    orders_count DESC;
